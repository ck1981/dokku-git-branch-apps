#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

git_archive_all() {
  APP=$1; REV=$2
  TMP_WORK_DIR=$(mktemp -d)
  chmod 755 $TMP_WORK_DIR
  unset GIT_DIR GIT_WORK_TREE
  git clone $DOKKU_ROOT/$APP $TMP_WORK_DIR > /dev/null
  pushd $TMP_WORK_DIR > /dev/null
  git config advice.detachedHead false
  git checkout $REV > /dev/null
  git submodule update --init --recursive > /dev/null
  find -name .git -prune -exec rm -rf {} \; > /dev/null
  tar c .
  popd > /dev/null
  rm -rf $TMP_WORK_DIR > /dev/null
}

# prereceive-feature() {
#   APP=$1
#   FEATURE=$2
#   FEATURE_PATH=$DOKKU_ROOT/$APP-$FEATURE
#   if [[ ! -d $FEATURE_PATH ]]; then
#     mkdir $FEATURE_PATH
#     cp -rf $APP_PATH/* $FEATURE_PATH > /dev/null
#     PRERECEIVE_HOOK="$FEATURE_PATH/hooks/pre-receive"
#     cat > $PRERECEIVE_HOOK <<EOF
# #!/usr/bin/env bash
# set -e; set -o pipefail;
# cat | DOKKU_ROOT="$DOKKU_ROOT" dokku git-hook $APP $FEATURE
# EOF
#     chmod +x $PRERECEIVE_HOOK
#   fi
# }

case "$1" in
  git-hook)
    APP=$2
    FEATURE=$3
    while read oldrev newrev refname
    do
      if [[ $refname = "refs/heads/master" ]] ; then
        git_archive_all $APP $newrev | dokku receive $APP | sed -u "s/^/"$'\e[1G'"/"
      else
        if [ -z "$FEATURE" ]; then
          FEATURE="$(echo $refname | sed 's:refs/heads/::g; s:/:-:g')"
          # prereceive-feature $APP $FEATURE
        fi
        if [ ! -d $APP-$FEATURE ]; then
          mkdir $APP-$FEATURE
        fi
        git_archive_all $APP $newrev | dokku receive $APP-$FEATURE | sed -u "s/^/"$'\e[1G'"/"
      fi

    done
    ;;

  git-*)
    APP="$(echo $2 | perl -pe 's/(?<!\\)'\''//g' | sed 's/\\'\''/'\''/g')"
    APP_PATH=$DOKKU_ROOT/$APP

    if [[ $1 == "git-receive-pack" && ! -d "$APP_PATH/refs" ]]; then
      git init --bare $APP_PATH > /dev/null
      PRERECEIVE_HOOK="$APP_PATH/hooks/pre-receive"
      cat > $PRERECEIVE_HOOK <<EOF
#!/usr/bin/env bash
set -e; set -o pipefail;
cat | DOKKU_ROOT="$DOKKU_ROOT" dokku git-hook $APP
EOF
      chmod +x $PRERECEIVE_HOOK
    fi

    args=$@
    git-shell -c "$args"
    ;;

  help)
    cat
    ;;
esac
